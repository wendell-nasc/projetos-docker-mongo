version: '3.9'

services:
  mongo1:
    build: ./mongo
    container_name: mongo1
    hostname: mongo1
    ports:
      - "${MONGO_PORT1}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_REPLICA_SET=${MONGO_REPLICA_SET}
      - MONGO_NODES=${MONGO_NODES}
    volumes:
      - ./data/mongo1:/data/db
      - ./mongo/mongod.conf:/etc/mongo/mongod.conf
    networks:
      - mongo-cluster

  mongo2:
    build: ./mongo
    container_name: mongo2
    hostname: mongo2
    ports:
      - "${MONGO_PORT2}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_REPLICA_SET=${MONGO_REPLICA_SET}
      - MONGO_NODES=${MONGO_NODES}
    volumes:
      - ./data/mongo2:/data/db
      - ./mongo/mongod.conf:/etc/mongo/mongod.conf
    networks:
      - mongo-cluster

  mongo3:
    build: ./mongo
    container_name: mongo3
    hostname: mongo3
    ports:
      - "${MONGO_PORT3}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_REPLICA_SET=${MONGO_REPLICA_SET}
      - MONGO_NODES=${MONGO_NODES}
    volumes:
      - ./data/mongo3:/data/db
      - ./mongo/mongod.conf:/etc/mongo/mongod.conf
    networks:
      - mongo-cluster

  mongo-init:
    image: mongo:6.0
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_REPLICA_SET=${MONGO_REPLICA_SET}
      - MONGO_NODES=${MONGO_NODES}
    env_file:
      - .env
    # entrypoint: >
    #   bash -c "
    #     sleep 5 &&
    #     mongosh --host mongo1:27017 -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin <<EOF
    #     rs.initiate({
    #       _id: 'rs0',
    #       members: [
    #         { _id: 0, host: 'mongo1:27017', priority: 2 },
    #         { _id: 1, host: 'mongo2:27017', priority: 1 },
    #         { _id: 2, host: 'mongo3:27017', priority: 1 }
    #       ]
    #     })
    #     EOF
    #   "
    networks:
      - mongo-cluster
    restart: on-failure
    #restart: "no"

networks:
  mongo-cluster:
    driver: bridge